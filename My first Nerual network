#This model was tranined by randomly generated data, I did not import any external files, I have not included the test data. The training and validation sets have an accuracy of more than 90%.
#This model was build using Keras/Tensorflow.

import numpy as np
from random import randint
from sklearn.utils import shuffle
from sklearn.preprocessing import MinMaxScaler

training_labels = []
training_samples = []

#the 5% or younger individuals who experience side effects
for i in range(50):
 random_younger = randint(13,64)
 training_samples.append(random_younger)
 training_labels.append(1)

#the 5% of individuals above the age of 64 with no side effects
 random_older = randint(65,100)
 training_samples.append(random_older)
 training_labels.append(0)


for i in range(1000):
 #the 95% of young people with no side effects
 random_younger = randint(13,64)
 training_samples.append(random_younger)
 training_labels.append(0)
#the 95% of individuals above the age of 64 with side effects
 random_older = randint(65,100)
 training_samples.append(random_older)
 training_labels.append(1)


training_labels = np.array(training_labels )
training_samples = np.array(training_samples)
training_labels, training_samples = shuffle(training_labels,training_samples)


scaler = MinMaxScaler(feature_range=(0,1))
scaled_training_samples = scaler.fit_transform(training_samples.reshape(-1,1))

import tensorflow
from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Activation
from tensorflow.keras import layers
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.metrics import categorical_crossentropy

model = keras.Sequential(
    [
        layers.Dense(16, input_shape=(1,), activation="relu", ),
        layers.Dense(32, activation="relu" ),
        layers.Dense(2, activation="softmax")
        ]
   )


model.compile(optimizer =Adam(learning_rate=0.001), loss = "SparseCategoricalCrossentropy", metrics = ["accuracy"])
model.fit(x=scaled_training_samples, y=training_labels , batch_size=10, epochs=30, shuffle=True, verbose=2, validation_split=0.1)
